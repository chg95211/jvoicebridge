=== JVoiceBridge ===
Contributors: Damir Kusar
Donate link: http://www.kusar.ch/
Tags: V0.1
Tested up to: V0.1
Stable tag: V0.1

This is a fork of the original JVoiceBridge. The original can be found on the Website: http://java.net/projects/jvoicebridge/ 
You can download it directly with subversion: svn checkout https://svn.java.net/svn/jvoicebridge~svn 

This fork should solve some problem with the audio communication between Softphone and the Bridge. 

This project is currently my bachelor work and after that, the JVoiceBridge should be more usable for the my school (Lucerne University of Applied Sciences and Arts).
The exactly problems can be read in chapter 1.

I used the jp branch and created a new branch called ku5ard

== Contens ==
0. Credits
1. Problem description
2. Changelog
3. Download
4. Build and Run
5. FAQ


== 0. Credits ==
Special thanks go out the the following:

Roman Speck (My Bachelor team partner)

== 1. Problem description ==
The problems are, that in some environment, the audio communication does not work. The establishment of the communication over SIP was in the tests never a problem. Only that the RTP packets can not be received on the client side. 

Scenario 1 problem: The RTP communication does not work from home to the OpenWonderland-Server in our School.
The server is on virtual.enterpriselab.ch or 147.88.212.133

Scenario 2 problem: The RTP communication does not work in a test environment in which the client is behind a NAT and the Server has a public IP.

Scenario 3 problem: The RTP communication does not work in the school network because the the network communication is a little bit complicated, but i do not have the rights to explain the school architecture here.

These 3 Scenarios are given at this moment and i will try to solve this. :) 

if somebody has another environment, please contact me, maybe i will have time to check this scenario also.


== 2. Changelog ==
The following Versions are for me intern, thats not the original versioning of the JVoiceBridge.

Version 0.1 = 
In this Version, there was added the Handler class in the stun folder. 
Changes in common folder: 
in the SdpManager.java and RtpSocket.java class were the Sockets set from the Handler class. 

Changes in sofphone folder: 
in the SipManager.java was the WAN socket and the public socket set. 
in the SipCommunicator.java was an if/else added to check if an argument for mediaport was given at the startup of softphone.
in the NewPhoneFrame.java and NewGuiManager.java was the wanCheckbox created, setup and placed. when this checkbox is selected, there are using another way to find out the public ip (in this case called WAN ip). This is useful for private users in the home network.
in the MediaManager there is an if/else to check if the wanCheckbox is selected or not to generate the SDP with the WAN socket or with the normal socket.
The SDP port is not anymore created randomly, it uses now the also the mediaport. this is necessary because now the client sends the RTP packets from the mediaport and will communicate the same port to the bridge to receive the packets on this port. before the changes, the client communicated a randomly generated port. So there is a reduction of the ports :) to setup easier firewalls.

All changes are marked with the author name: Damir Kusar and Version 0.2.


== 3. Download ==
You can download it via the website: https://github.com/damirkusar/jvoicebridge
and feel free to fork it


== 4. Build and Run ==
There is a build scripts in the directory called buildall.sh.
To run the Bridge or the Softphone you must be in the jp folder.

Before you run, (after building), please check that you have setup the build.properties file for the softphone and the voip/run.properties file for the bridge. Here is a sample of each file.


= build.properties =
### well-known directories
common.dir=${top.dir}/common
stun.dir=${top.dir}/stun
bridge.dir=${top.dir}/voip
softphone.dir=${top.dir}/softphone
dist.dir=${top.dir}/dist
voicelib.dir=${top.dir}/voicelib
bridgemonitor.dir=${top.dir}/bridgemonitor

### bridge settings
#bridge.hostname=${voicebridge.local.hostAddress}
bridge.hostname=147.88.212.133
bridge.sip.port=5060

### softphone settings
softphone.registrar=${bridge.hostname};sip-stun:${bridge.sip.port}

#softphone.username=${user.name}
softphone.username=ku5ard

#softphone.mediaport=10000 #this is the port to send the RTP packets from client. must be activated in the build.xml file.
#softphone.localipaddress=192.168.2.90 #sets the local ipaddress if the sofphone makes trouble with finding the correct one. must be activated in the build.xml file.


= voip/run.properties =
voicebridge.sip.port=5060
voicebridge.control.port=6666
voicebridge.local.hostAddress=147.88.212.133
voicebridge.server.public.address=${voicebridge.local.hostAddress}
voicebridge.server.public.control.port=${voicebridge.control.port}
voicebridge.server.public.sip.port=${voicebridge.sip.port}
voicebridge.first.rtp.port=10000
voicebridge.last.rtp.port=10200
voicebridge.status.listeners=
voicebridge.sip.gateways=
voicebridge.sip.proxy=
voicebridge.localhost.security=false
voicebridge.outside.line.prefix=9
voicebridge.long.distance.prefix=1
voicebridge.international.prefix=011
voicebridge.status.listeners=${voicebridge.local.hostAddress}:6668
voicebridge.lone.receiver.port=0
voicebridge.sound.path=/com/sun/voip/server/sounds:.
voicebridge.sound.cache.path=./audiocache
voicebridge.network.audio.buffer.size=


== 5. FAQ ==
Q: How can i test my changes in Open Wonderland?
A: After the ant dist in the root folder of the project, it creates a dist folder. The following files has to be replaced in Open Wonderlan.

voicebridge-dist.zip -> wonderland/modules/tools/voicebridge/lib/zip/
voicelib/voicelib.jar -> wonderland/modules/tools/audio-manager/lib/
softphone/softphone.jar -> wonderland/core/ext/softphone/softphone.jar

Q:
A: